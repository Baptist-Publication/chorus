syntax = "proto3";

package consensus;

import "github.com/Baptist-Publication/chorus/angine/protos/types/types.proto";

enum MsgType{
	None = 0;
	NewRoundStep = 1; 
	CommitStep   =2; 
	Proposal     =3; 
	ProposalPOL  =4; 
	BlockPart    = 5; // both block & POL
	Vote         =6; 
	HasVote      =7; 
	VoteSetMaj23 =8; 
	VoteSetBits  =9; 
}

enum RoundStepType{
	EnumBegin = 0;
	NewHeight     = 0x01 ;// Wait til CommitTime + timeoutCommit
	NewRound      = 0x02 ;// Setup new round and go to RoundStepPropose
	Propose       = 0x03 ;// Did propose, gossip proposal
	Prevote       = 0x04 ;// Did prevote, gossip prevotes
	PrevoteWait   = 0x05 ;// Did receive any +2/3 prevotes, start timeout
	Precommit     = 0x06 ;// Did precommit, gossip precommits
	PrecommitWait = 0x07 ;// Did receive any +2/3 precommits, start timeout
	Commit        = 0x08 ;// Entered commit state machine
	// NOTE: RoundStepNewHeight acts as RoundStepCommitWait.
}

message NewRoundStepMessage{
	int64 Height = 1;
	int64 Round = 2;
	RoundStepType Step = 3;
	int64 SecondsSinceStartTime = 4;
	int64 LastCommitRound = 5;
}

message ProtoBitArray{
	int64 Bits = 3;
	repeated uint64 Elems = 4;
}

message CommitStepMessage{
	int64 Height=1;
	types.PartSetHeader BlockPartsHeader	=2;
	ProtoBitArray BlockParts = 3;
}

message ProposalMessage{
	types.Proposal Proposal = 1;
}

message ProposalPOLMessage {
	int64 Height = 1;
	int64 ProposalPOLRound = 2;
	ProtoBitArray ProposalPOL = 3;
}

message BlockPartMessage{
	int64 Height = 1;
	int64 Round = 2;
	types.Part Part = 3;
}

message VoteMessage {
	types.Vote Vote = 1;
}

message HasVoteMessage{
	int64 Height = 1;
	int64 Round = 2;
	types.VoteType Type = 3;
	int64 Index = 4;
}

message VoteSetMaj23Message{
	int64 Height = 1;
	int64 Round = 2;
	types.VoteType Type = 3;
	types.BlockID BlockID = 4;
}

message VoteSetBitsMessage{
	int64 Height = 1;
	int64 Round = 2;
	types.VoteType Type = 3;
	types.BlockID BlockID = 4;
	ProtoBitArray Votes = 5;
}

message ConsensusMessage{
	MsgType Type = 1;
	bytes Data = 2;
}
