// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package p2p

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CheckType int32

const (
	CheckType_Unkown              CheckType = 0
	CheckType_Tx                  CheckType = 1
	CheckType_BlockRequeste       CheckType = 4
	CheckType_BlockResponse       CheckType = 5
	CheckType_StatusRequest       CheckType = 6
	CheckType_StatusResponse      CheckType = 7
	CheckType_BlockHeaderRequest  CheckType = 8
	CheckType_BlockHeaderResponse CheckType = 9
	CheckType_NewRoundStep        CheckType = 10
	CheckType_CommitStep          CheckType = 11
	CheckType_Proposal            CheckType = 12
	CheckType_ProposalPOL         CheckType = 13
	CheckType_BlockPart           CheckType = 3
	CheckType_Vote                CheckType = 15
	CheckType_HasVote             CheckType = 16
	CheckType_VoteSetMaj23        CheckType = 17
	CheckType_VoteSetBits         CheckType = 18
	CheckType_PexRequest          CheckType = 19
	CheckType_PexAddrs            CheckType = 20
)

var CheckType_name = map[int32]string{
	0:  "Unkown",
	1:  "Tx",
	4:  "BlockRequeste",
	5:  "BlockResponse",
	6:  "StatusRequest",
	7:  "StatusResponse",
	8:  "BlockHeaderRequest",
	9:  "BlockHeaderResponse",
	10: "NewRoundStep",
	11: "CommitStep",
	12: "Proposal",
	13: "ProposalPOL",
	3:  "BlockPart",
	15: "Vote",
	16: "HasVote",
	17: "VoteSetMaj23",
	18: "VoteSetBits",
	19: "PexRequest",
	20: "PexAddrs",
}
var CheckType_value = map[string]int32{
	"Unkown":              0,
	"Tx":                  1,
	"BlockRequeste":       4,
	"BlockResponse":       5,
	"StatusRequest":       6,
	"StatusResponse":      7,
	"BlockHeaderRequest":  8,
	"BlockHeaderResponse": 9,
	"NewRoundStep":        10,
	"CommitStep":          11,
	"Proposal":            12,
	"ProposalPOL":         13,
	"BlockPart":           3,
	"Vote":                15,
	"HasVote":             16,
	"VoteSetMaj23":        17,
	"VoteSetBits":         18,
	"PexRequest":          19,
	"PexAddrs":            20,
}

func (x CheckType) String() string {
	return proto.EnumName(CheckType_name, int32(x))
}
func (CheckType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_message_fcbf9371f297a47d, []int{0}
}

type MsgType int32

const (
	MsgType_None          MsgType = 0
	MsgType_CheckRequest  MsgType = 1
	MsgType_CheckResponse MsgType = 2
)

var MsgType_name = map[int32]string{
	0: "None",
	1: "CheckRequest",
	2: "CheckResponse",
}
var MsgType_value = map[string]int32{
	"None":          0,
	"CheckRequest":  1,
	"CheckResponse": 2,
}

func (x MsgType) String() string {
	return proto.EnumName(MsgType_name, int32(x))
}
func (MsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_message_fcbf9371f297a47d, []int{1}
}

type CheckMessage struct {
	Type                 MsgType   `protobuf:"varint,1,opt,name=Type,enum=p2p.MsgType" json:"Type,omitempty"`
	ChecType             CheckType `protobuf:"varint,2,opt,name=ChecType,enum=p2p.CheckType" json:"ChecType,omitempty"`
	Data                 []byte    `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CheckMessage) Reset()         { *m = CheckMessage{} }
func (m *CheckMessage) String() string { return proto.CompactTextString(m) }
func (*CheckMessage) ProtoMessage()    {}
func (*CheckMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_fcbf9371f297a47d, []int{0}
}
func (m *CheckMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckMessage.Unmarshal(m, b)
}
func (m *CheckMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckMessage.Marshal(b, m, deterministic)
}
func (dst *CheckMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckMessage.Merge(dst, src)
}
func (m *CheckMessage) XXX_Size() int {
	return xxx_messageInfo_CheckMessage.Size(m)
}
func (m *CheckMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CheckMessage proto.InternalMessageInfo

func (m *CheckMessage) GetType() MsgType {
	if m != nil {
		return m.Type
	}
	return MsgType_None
}

func (m *CheckMessage) GetChecType() CheckType {
	if m != nil {
		return m.ChecType
	}
	return CheckType_Unkown
}

func (m *CheckMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*CheckMessage)(nil), "p2p.CheckMessage")
	proto.RegisterEnum("p2p.CheckType", CheckType_name, CheckType_value)
	proto.RegisterEnum("p2p.MsgType", MsgType_name, MsgType_value)
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_message_fcbf9371f297a47d) }

var fileDescriptor_message_fcbf9371f297a47d = []byte{
	// 347 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0x31, 0xf3, 0xd2, 0x40,
	0x10, 0xc5, 0xff, 0x09, 0x31, 0x84, 0x25, 0x09, 0xcb, 0xe2, 0x28, 0x25, 0x63, 0xc5, 0x50, 0x50,
	0x84, 0xc6, 0x56, 0xb0, 0xa0, 0x10, 0xcc, 0x04, 0xb4, 0x3f, 0xc9, 0x0e, 0x22, 0x90, 0x3b, 0x73,
	0xc7, 0x80, 0x1f, 0xd0, 0xef, 0xe5, 0xdc, 0x99, 0x30, 0xda, 0xdd, 0xbe, 0xfd, 0xbd, 0xf7, 0x92,
	0x3b, 0x48, 0xae, 0xac, 0xb5, 0x38, 0xf2, 0x5c, 0xd5, 0xd2, 0x48, 0xea, 0xa8, 0x4c, 0xbd, 0x53,
	0x10, 0xaf, 0xbe, 0xf3, 0xe1, 0xbc, 0xf9, 0xbb, 0xa2, 0x09, 0x04, 0xfb, 0x5f, 0x8a, 0xc7, 0xde,
	0xc4, 0x9b, 0xa6, 0x59, 0x3c, 0x57, 0x99, 0x9a, 0x6f, 0xf4, 0xd1, 0x6a, 0x85, 0xdb, 0xd0, 0x0c,
	0x22, 0xeb, 0x70, 0x94, 0xef, 0xa8, 0xd4, 0x51, 0x2e, 0xc6, 0x71, 0xcf, 0x3d, 0x11, 0x04, 0x1f,
	0x85, 0x11, 0xe3, 0xce, 0xc4, 0x9b, 0xc6, 0x85, 0x3b, 0xcf, 0x7e, 0xfb, 0xd0, 0x7b, 0xb2, 0x04,
	0x10, 0x7e, 0xa9, 0xce, 0xf2, 0x5e, 0xe1, 0x0b, 0x85, 0xe0, 0xef, 0x1f, 0xe8, 0xd1, 0x10, 0x92,
	0xe5, 0x45, 0x1e, 0xce, 0x05, 0xff, 0xbc, 0xb1, 0x36, 0x8c, 0xc1, 0x3f, 0x92, 0x56, 0xb2, 0xd2,
	0x8c, 0xaf, 0xac, 0xb4, 0x33, 0xc2, 0xdc, 0x74, 0x83, 0x61, 0x48, 0x04, 0x69, 0x2b, 0x35, 0x58,
	0x97, 0xde, 0x00, 0x39, 0xe7, 0x9a, 0x45, 0xc9, 0x75, 0xcb, 0x46, 0xf4, 0x16, 0x46, 0xff, 0xe9,
	0x8d, 0xa1, 0x47, 0x08, 0xf1, 0x96, 0xef, 0x85, 0xbc, 0x55, 0xe5, 0xce, 0xb0, 0x42, 0xa0, 0x14,
	0x60, 0x25, 0xaf, 0xd7, 0x93, 0x71, 0x73, 0x9f, 0x62, 0x88, 0xf2, 0x5a, 0x2a, 0xa9, 0xc5, 0x05,
	0x63, 0x1a, 0x40, 0xbf, 0x9d, 0xf2, 0xcf, 0x9f, 0x30, 0xa1, 0x04, 0x7a, 0x2e, 0x39, 0x17, 0xb5,
	0xc1, 0x0e, 0x45, 0x10, 0x7c, 0x95, 0x86, 0x71, 0x40, 0x7d, 0xe8, 0xae, 0x85, 0x76, 0x03, 0xda,
	0x1a, 0x7b, 0xda, 0xb1, 0xd9, 0x88, 0x1f, 0xd9, 0x02, 0x87, 0x36, 0xa8, 0x51, 0x96, 0x27, 0xa3,
	0x91, 0x6c, 0x6f, 0xce, 0x8f, 0xf6, 0x93, 0x47, 0xae, 0x97, 0x1f, 0x1f, 0xca, 0xb2, 0xd6, 0xf8,
	0x7a, 0xf6, 0x1e, 0xba, 0xcd, 0xc3, 0xd8, 0x8a, 0xad, 0xac, 0x18, 0x5f, 0x6c, 0xaa, 0xbb, 0xdb,
	0xd6, 0xe4, 0x2e, 0xb3, 0x51, 0x9a, 0x3f, 0xf4, 0xbf, 0x85, 0xee, 0xfd, 0x17, 0x7f, 0x02, 0x00,
	0x00, 0xff, 0xff, 0xb0, 0x1c, 0x81, 0x7d, 0x10, 0x02, 0x00, 0x00,
}
